name: Publish Node.js Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating branches and PRs
      pull-requests: write # Needed for creating PRs
      packages: write # Needed for publishing packages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for version history when using standard-version
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm test

      # Version bump on manual trigger and create branch
      - name: Bump version (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Create a new branch for version bump
          BRANCH_NAME="release/v${{ github.event.inputs.version }}-$(date +%Y%m%d%H%M%S)"
          git checkout -b $BRANCH_NAME
          npm run release:${{ github.event.inputs.version }}

          # Push the branch to origin
          git push -u origin $BRANCH_NAME

          echo "RELEASE_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Build package
        run: npm run build

      # Only publish if this is triggered by a tag push
      - name: Publish package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Create PR for version bump (only on manual workflow)
      - name: Create Pull Request
        if: github.event_name == 'workflow_dispatch'
        id: create-pr
        run: |
          # Install GitHub CLI if not already installed
          command -v gh >/dev/null 2>&1 || {
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
          }

          # Setup GitHub CLI
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

          # Create labels if they don't exist
          REPO="${GITHUB_REPOSITORY}"

          # Create "automated pr" label if it doesn't exist
          if ! gh label list -R "${REPO}" | grep -q "automated pr"; then
            gh label create "automated pr" -R "${REPO}" -c "#0E8A16" -d "PR created by automated workflow"
          fi

          # Create "release" label if it doesn't exist
          if ! gh label list -R "${REPO}" | grep -q "release"; then
            gh label create "release" -R "${REPO}" -c "#C5DEF5" -d "Release-related changes"
          fi

          # Create the PR
          PR_URL=$(gh pr create --base main --head ${{ env.RELEASE_BRANCH }} \
            --title "Release: New ${{ github.event.inputs.version }} version" \
            --body "This PR was automatically created by the GitHub Action workflow.
            
            Changes:
            - Bumps version to next ${{ github.event.inputs.version }} release
            - Updates CHANGELOG.md with recent changes
            
            Once merged, a new tag will be created, triggering the publish workflow.")

          # Extract PR number from URL
          PR_NUMBER=$(echo $PR_URL | grep -o '[0-9]\+$')
          echo "pull-request-number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "Created PR #$PR_NUMBER: $PR_URL"

          # Add labels separately after PR is created
          gh pr edit $PR_NUMBER --add-label "automated pr,release"
